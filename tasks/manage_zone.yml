---
- name: "{{ zone }} - Ensure zone"  # noqa name[template]
  ansible.posix.firewalld:
    zone: "{{ zone }}"
    immediate: false
    permanent: true
    state: 'present'
  register: 'zone_created'

- name: "{{ zone }} - Ensure zone target"  # noqa name[template]
  ansible.posix.firewalld:
    zone: "{{ zone }}"
    target: "{{ firewalld_zones[zone]['target'] | default('default') }}"
    permanent: true
    state: 'present'
  register: 'zone_target'

- name: "{{ zone }} - Ensure zone masquerading"  # noqa name[template]
  ansible.posix.firewalld:
    zone: "{{ zone }}"
    masquerade: "{{ firewalld_zones[zone]['masquerade'] | default('false') }}"
    permanent: true
    state: 'enabled'
  register: 'zone_masquerade'

- name: "{{ zone }} - Reload config"  # noqa name[template]
  ansible.builtin.command: firewall-cmd --reload
  changed_when: true
  when: zone_created['changed'] or zone_target['changed'] or zone_masquerade['changed']

- name: "{{ zone }} - Ensure interfaces"  # noqa name[template]
  ansible.posix.firewalld:
    zone: "{{ zone }}"
    interface: "{{ interface }}"
    immediate: true
    permanent: true
    state: 'enabled'
  loop: "{{ firewalld_zones[zone]['interfaces'] | default([]) }}"
  loop_control:
    loop_var: 'interface'

- name: "{{ zone }} - Ensure services"  # noqa name[template]
  ansible.posix.firewalld:
    zone: "{{ zone }}"
    service: "{{ service }}"
    immediate: true
    permanent: true
    state: 'enabled'
  loop: "{{ firewalld_zones[zone]['services'] }}"
  loop_control:
    loop_var: 'service'

- name: "{{ zone }} - Ensure ports"  # noqa name[template]
  ansible.posix.firewalld:
    zone: "{{ zone }}"
    port: "{{ port }}"
    immediate: true
    permanent: true
    state: 'enabled'
  loop: "{{ firewalld_zones[zone]['ports'] | default([]) }}"
  loop_control:
    loop_var: 'port'

- name: "{{ zone }} - Ensure rich rules"  # noqa name[template]
  ansible.posix.firewalld:
    zone: "{{ zone }}"
    rich_rule: "{{ rule }}"
    immediate: true
    permanent: true
    state: 'enabled'
  loop: "{{ firewalld_zones[zone]['rich_rules'] | default([]) }}"
  loop_control:
    loop_var: 'rule'

- name: "{{ zone }} - Ensure source networks"  # noqa name[template]
  ansible.posix.firewalld:
    zone: "{{ zone }}"
    source: "{{ sources }}"
    immediate: true
    permanent: true
    state: 'enabled'
  loop: "{{ firewalld_zones[zone]['sources'] | default([]) }}"
  loop_control:
    loop_var: 'sources'
