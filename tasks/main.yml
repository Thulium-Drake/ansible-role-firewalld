---
- name: 'Ensure FirewallD is installed'
  ansible.builtin.package:
    name: 'firewalld'
    state: 'present'

- name: 'Ensure FirewallD is running'
  ansible.builtin.service:
    name: 'firewalld'
    state: 'started'

- name: 'Sanity check to prevent lockouts'
  block:
    - name: 'Checking zones for ssh service'
      ansible.builtin.assert:
        that:
          - "'ssh' in item['value']['services']"
      loop: "{{ lookup('ansible.builtin.dict', firewalld_zones) }}"
      register: 'zone_config'
  rescue:
    - name: 'Assert that at least one zone contains ssh'
      ansible.builtin.assert:
        that:
          - zone_config['results'] | selectattr('failed', 'equalto', false) | length >= 1

- name: 'Manage zones'
  ansible.builtin.include_tasks: 'tasks/manage_zone.yml'
  loop: "{{ firewalld_zones.keys() }}"
  loop_control:
    loop_var: 'zone'

- name: 'Remove unknown ports and serices'
  when: firewalld_prune_unknown
  block:
    - name: 'Collect current FirewallD configuration'
      ansible.posix.firewalld_info:
      register: 'firewalld_config'

    - name: 'Disable unknown zones'
      ansible.posix.firewalld:
        zone: "{{ zone }}"
        permanent: true
        state: 'disabled'
      loop: "{{ firewalld_config['collected_zones'] }}"
      loop_control:
        loop_var: 'zone'
      when: zone not in firewalld_zones.keys()

    - name: 'Prune managed zones'
      ansible.builtin.include_tasks: 'tasks/prune_zone.yml'
      loop: "{{ firewalld_zones.keys() }}"
      loop_control:
        loop_var: 'zone'
